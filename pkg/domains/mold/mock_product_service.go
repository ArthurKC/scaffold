// Code generated by MockGen. DO NOT EDIT.
// Source: product_service.go

// Package mold is a generated GoMock package.
package mold

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockProductService is a mock of ProductService interface
type MockProductService struct {
	ctrl     *gomock.Controller
	recorder *MockProductServiceMockRecorder
}

// MockProductServiceMockRecorder is the mock recorder for MockProductService
type MockProductServiceMockRecorder struct {
	mock *MockProductService
}

// NewMockProductService creates a new mock instance
func NewMockProductService(ctrl *gomock.Controller) *MockProductService {
	mock := &MockProductService{ctrl: ctrl}
	mock.recorder = &MockProductServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockProductService) EXPECT() *MockProductServiceMockRecorder {
	return m.recorder
}

// SaveProduct mocks base method
func (m *MockProductService) SaveProduct(destDir string, product *Product) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveProduct", destDir, product)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveProduct indicates an expected call of SaveProduct
func (mr *MockProductServiceMockRecorder) SaveProduct(destDir, product interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveProduct", reflect.TypeOf((*MockProductService)(nil).SaveProduct), destDir, product)
}
