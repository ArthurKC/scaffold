// Code generated by MockGen. DO NOT EDIT.
// Source: create.go

// Package mold is a generated GoMock package.
package mold

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockCreateOutputPort is a mock of CreateOutputPort interface
type MockCreateOutputPort struct {
	ctrl     *gomock.Controller
	recorder *MockCreateOutputPortMockRecorder
}

// MockCreateOutputPortMockRecorder is the mock recorder for MockCreateOutputPort
type MockCreateOutputPortMockRecorder struct {
	mock *MockCreateOutputPort
}

// NewMockCreateOutputPort creates a new mock instance
func NewMockCreateOutputPort(ctrl *gomock.Controller) *MockCreateOutputPort {
	mock := &MockCreateOutputPort{ctrl: ctrl}
	mock.recorder = &MockCreateOutputPortMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCreateOutputPort) EXPECT() *MockCreateOutputPortMockRecorder {
	return m.recorder
}

// RenderCreateResponse mocks base method
func (m *MockCreateOutputPort) RenderCreateResponse(r *CreateResponse) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "RenderCreateResponse", r)
}

// RenderCreateResponse indicates an expected call of RenderCreateResponse
func (mr *MockCreateOutputPortMockRecorder) RenderCreateResponse(r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RenderCreateResponse", reflect.TypeOf((*MockCreateOutputPort)(nil).RenderCreateResponse), r)
}

// RenderCreateError mocks base method
func (m *MockCreateOutputPort) RenderCreateError(e *CreateError) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "RenderCreateError", e)
}

// RenderCreateError indicates an expected call of RenderCreateError
func (mr *MockCreateOutputPortMockRecorder) RenderCreateError(e interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RenderCreateError", reflect.TypeOf((*MockCreateOutputPort)(nil).RenderCreateError), e)
}
